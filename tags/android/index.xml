<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on leckyyyyyyy.info</title>
    <link>http://leckyyyyyyy.github.io/tags/android/</link>
    <description>Recent content in Android on leckyyyyyyy.info</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 28 Jun 2015 17:02:12 +0900</lastBuildDate>
    <atom:link href="http://leckyyyyyyy.github.io/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>オリジナルの URL スキームを設定したアプリをコンソールから Intent を投げて起動する</title>
      <link>http://leckyyyyyyy.github.io/post/2015/android-console-send-intent/</link>
      <pubDate>Sun, 28 Jun 2015 17:02:12 +0900</pubDate>
      
      <guid>http://leckyyyyyyy.github.io/post/2015/android-console-send-intent/</guid>
      <description>&lt;p&gt;オリジナルの URL スキームを設定したアプリを起動するとき、ブラウザのリンクを開く方法がありますが、その場合 HTML を用意してブラウザからアクセスする必要があります。&lt;br /&gt;
起動を確認するのが目的の場合、コンソールから Intent を送信することでアプリの起動を確認することができます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;コンソールから Intent を送信する手順&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;コンソールを起動&lt;/li&gt;
&lt;li&gt;コンソールで &lt;code&gt;adb shell&lt;/code&gt; を実行して端末に接続&lt;/li&gt;
&lt;li&gt;コンソールで &lt;code&gt;am start -a android.intent.action.VIEW -d &amp;quot;test://example.com&amp;quot;&lt;/code&gt; を実行&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;URL スキームに対応するアプリが起動するようになります。&lt;br /&gt;
&lt;code&gt;-d&lt;/code&gt; の後ろの文字列を &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt; で囲っているのは URL に &amp;amp; が含まれている場合 &amp;amp; 以降の文字列が認識されないため、渡せるように囲っています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AndroidManifest.xml の設定例&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;manifest xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    package=&amp;quot;package&amp;quot; &amp;gt;

    &amp;lt;application
        android:allowBackup=&amp;quot;true&amp;quot;
        android:icon=&amp;quot;@mipmap/ic_launcher&amp;quot;
        android:label=&amp;quot;@string/app_name&amp;quot;
        android:theme=&amp;quot;@style/AppTheme&amp;quot; &amp;gt;
        &amp;lt;activity
            android:name=&amp;quot;.MainActivity&amp;quot;
            android:label=&amp;quot;@string/app_name&amp;quot; &amp;gt;
            &amp;lt;intent-filter&amp;gt;
                &amp;lt;action android:name=&amp;quot;android.intent.action.MAIN&amp;quot; /&amp;gt;

                &amp;lt;category android:name=&amp;quot;android.intent.category.LAUNCHER&amp;quot; /&amp;gt;
            &amp;lt;/intent-filter&amp;gt;
            &amp;lt;intent-filter&amp;gt;
                &amp;lt;action android:name=&amp;quot;android.intent.action.VIEW&amp;quot; /&amp;gt;

                &amp;lt;category android:name=&amp;quot;android.intent.category.DEFAULT&amp;quot; /&amp;gt;
                &amp;lt;category android:name=&amp;quot;android.intent.category.BROWSABLE&amp;quot; /&amp;gt;
                &amp;lt;data android:scheme=&amp;quot;test&amp;quot; /&amp;gt;
            &amp;lt;/intent-filter&amp;gt;
        &amp;lt;/activity&amp;gt;
    &amp;lt;/application&amp;gt;

&amp;lt;/manifest&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Android の Espresso.onData で java.lang.IndexOutOfBoundsException が発生したときは</title>
      <link>http://leckyyyyyyy.github.io/post/2015/android-espresso-ondata-indexoutofboundsexception/</link>
      <pubDate>Wed, 24 Jun 2015 00:30:12 +0900</pubDate>
      
      <guid>http://leckyyyyyyy.github.io/post/2015/android-espresso-ondata-indexoutofboundsexception/</guid>
      <description>&lt;p&gt;Android の UI テストフレームワーク Espresso を利用しているときに Espresso.onData で &lt;code&gt;java.lang.IndexOutOfBoundsException&lt;/code&gt; が発生したときは参照している Adapter の &lt;code&gt;getCount&lt;/code&gt;、&lt;code&gt;getItem&lt;/code&gt; の実装を確認してみましょう。&lt;/p&gt;

&lt;p&gt;Espresso.onData で参照する Adapter の &lt;a href=&#34;https://code.google.com/p/android-test-kit/source/browse/espresso/lib/src/main/java/com/google/android/apps/common/testing/ui/espresso/action/AdapterViewProtocols.java#49&#34;&gt;データを取得している箇所&lt;/a&gt; で &lt;code&gt;getCount&lt;/code&gt; を呼び出しているのですが、例外が発生したコードでは getCount の返す値がデータのリストの長さを返していませんでした。&lt;br /&gt;
getItem はデータのリストを参照していたので、つじつまが合わず例外が発生していました。&lt;/p&gt;

&lt;p&gt;getCount、getItem は Adapter が保持するデータのリストを参照するはずなのですが、今回は全く異なる処理が組み込まれていたのでハマりました。&lt;br /&gt;
メソッドをオーバーライドするときは、メソッドの本来の役割を理解した上で実装しないと痛い目にあいますね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Product Flavor で利用できない名前</title>
      <link>http://leckyyyyyyy.github.io/post/2015/android-product-flavor-unavailable-name/</link>
      <pubDate>Sat, 30 May 2015 16:19:48 +0900</pubDate>
      
      <guid>http://leckyyyyyyy.github.io/post/2015/android-product-flavor-unavailable-name/</guid>
      <description>&lt;p&gt;Product Flavor の名前に BuildType で定義している名前は利用できない。&lt;br /&gt;
&lt;code&gt;ProductFlavor names cannot collide with BuildType names&lt;/code&gt; のエラーが出る。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;release&lt;/code&gt; はデフォルトで定義されているので気付いたけど、&lt;br /&gt;
&lt;code&gt;debug&lt;/code&gt; を定義してみると同じエラーが出たので、予約されているようです。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>